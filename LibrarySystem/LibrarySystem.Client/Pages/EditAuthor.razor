@page "/authorDetails/{authorId:int}"
@using LibrarySystem.Models
@inject HttpClient http
@inject NavigationManager navigation

<h3>Author Editor</h3>

<EditForm Model="@author" OnValidSubmit="HandleValidSubmit" FormName="AuthorForm">
    <FluentStack Orientation="Orientation.Vertical">
        <FluentNumberField @bind-Value="author.AuthorId" Label="authorId" TValue="int" ReadOnly></FluentNumberField>
        <FluentTextField @bind-Value="author.FirstName" Label="First Name"></FluentTextField>
        <FluentTextField @bind-Value="author.LastName" Label="Last Name"></FluentTextField>
        <FluentStack Orientation="Orientation.Horizontal">
            <FluentButton Type="ButtonType.Submit">Save</FluentButton>
            <FluentButton OnClick="@(()=> navigation.NavigateTo("/authorList"))">Cancel</FluentButton>
        </FluentStack>

    </FluentStack>
</EditForm>
@code {
    [Parameter]
    public int authorId { get; set; }
    [SupplyParameterFromForm]
    public AuthorViewModel author { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        author = await http.GetFromJsonAsync<AuthorViewModel>($"/api/author/{authorId}");
    }

    private async Task HandleValidSubmit()
    {
        await http.PutAsJsonAsync($"/api/author/{authorId}", author);
        navigation.NavigateTo("/authorList");
    }
}

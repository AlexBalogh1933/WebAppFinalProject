@using LibrarySystem.Models
@inject HttpClient http

<FluentButton IconStart="@buttonIcon" OnClick="FindTop3LikedBooks">
    @buttonMessage
</FluentButton>

@code {
    [Parameter]
    public EventCallback<IQueryable<Tuple<AuthorViewModel, BookViewModel, PublisherViewModel>>> OnTop3LikedBooksClick { get; set; }

    [Parameter]
    public IQueryable<Tuple<AuthorViewModel, BookViewModel, PublisherViewModel>>? BookQuery { get; set; }

    bool showingLikedBooks = false;
    string buttonMessage = "Show top 3 best rated books";
    Icon buttonIcon = new Icons.Regular.Size16.ThumbLike();

    private async Task FindTop3LikedBooks()
    {
        if (showingLikedBooks)
        {
            var booksTable = (await http.GetFromJsonAsync<List<BookViewModel>>("api/books"))?.AsQueryable();
            var authorTable = (await http.GetFromJsonAsync<List<AuthorViewModel>>("api/authors"))?.AsQueryable();
            var authorBookTable = (await http.GetFromJsonAsync<List<AuthorBookViewModel>>("api/authorbooks"))?.AsQueryable();
            var publisherTable = (await http.GetFromJsonAsync<List<PublisherViewModel>>("api/publishers"))?.AsQueryable();

            BookQuery = (from book in booksTable
                         join authorbook in authorBookTable on book.BookId equals authorbook.BookId
                         join author in authorTable on authorbook.AuthorId equals author.AuthorId
                         join publisher in publisherTable on book.PublisherId equals publisher.PublisherId
                         select new Tuple<AuthorViewModel, BookViewModel, PublisherViewModel>(author, book, publisher)).AsQueryable();


            await OnTop3LikedBooksClick.InvokeAsync(BookQuery);
            showingLikedBooks = false;
            buttonMessage = "Show top 3 best rated books";
            buttonIcon = new Icons.Regular.Size16.ThumbLike();
        }
        else
        {
            var top3LikedBooks =
            (from book in BookQuery
             orderby book.Item2.NumberOfLikes descending
             select book)
             .Take(3)
              .AsQueryable();
            
            await OnTop3LikedBooksClick.InvokeAsync(top3LikedBooks);
            showingLikedBooks = true;
            buttonMessage = "Show all Books";
            buttonIcon = new Icons.Regular.Size16.Clipboard();

        }
    }
}
